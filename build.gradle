/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'


// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	mavenLocal()
	mavenCentral()
	//jcenter()
	
	maven { url "http://artifactory01.rds.lexmark.com:8080/artifactory/repo/" }
}

// In this section you declare the dependencies for your production and test code
dependencies {

//	compile 'org.slf4j:slf4j-api:1.7.21'
//	compile 'org.slf4j:slf4j-log4j12:1.7.21'
    //compile 'org.apache.httpcomponents:httpclient:4.5.3'
    
    compile "org.slf4j:slf4j-api:1.7.5"
    runtime "org.slf4j:slf4j-log4j12:1.7.5"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.8'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
    compile 'javax.servlet:jstl'
    
    compile("org.springframework.boot:spring-boot-devtools")
	compile "com.oracle:ojdbc:7.0"

}

task initProject(description: 'Initialize project directory structure.') {
	doLast {
		// Default package to be created in each src dir.
		
			// convention.sourceSets contains the directory structure
			// for our Groovy project. So we use this struture
			// and make a directory for each node.
			
			sourceSets*.java.srcDirs*.each { it.mkdirs() }
			sourceSets*.resources.srcDirs*.each { it.mkdirs() }
		
	}
}

/*jar {
	from {
		(configurations.runtime).collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	manifest {
		attributes("Main-Class": "com.lexmark.runner.Main" )
	}
}*/
